/* This file was generated by SableCC (http://www.sablecc.org/). 
 * Then modified.
 */

package ast.node;

import ast.visitor.*;

@SuppressWarnings("nls")
public final class MeggyToneStart extends IStatement
{
    private IExp _tone_exp_;
    private IExp _duration_exp_;

    public MeggyToneStart(int _line_, int _pos_, 
            IExp _tone_exp_, IExp _duration_exp_)
    {
        super(_line_, _pos_);
        
        setToneExp(_tone_exp_);
        setDurationExp(_duration_exp_);
    }

    @Override
    public int getNumExpChildren() { return 2; }
    
    @Override
    public Object clone()
    {
        return new MeggyToneStart(
                this.getLine(),
                this.getPos(),
                this._tone_exp_,this._duration_exp_);
    }

    public void accept(Visitor v)
    {
        v.visitMeggyToneStart(this);
    }

    public IExp getToneExp()
    {
        return this._tone_exp_;
    }

    public IExp getDurationExp()
    {
        return this._duration_exp_;
    }

    public void setToneExp(IExp node)
    {
        if(this._tone_exp_ != null)
        {
            this._tone_exp_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._tone_exp_ = node;
    }

    public void setDurationExp(IExp node)
    {
        if(this._duration_exp_ != null)
        {
            this._duration_exp_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._duration_exp_ = node;
    }

    @Override
    void removeChild(Node child)
    {
        // Remove child
        if(this._tone_exp_ == child)
        {
            this._tone_exp_ = null;
            return;
        }

        if(this._duration_exp_ == child)
        {
            this._duration_exp_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(Node oldChild, Node newChild)
    {
        // Replace child
        if(this._tone_exp_ == oldChild)
        {
            setToneExp((IExp) newChild);
            return;
        }

        if(this._duration_exp_ == oldChild)
        {
            setDurationExp((IExp) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
